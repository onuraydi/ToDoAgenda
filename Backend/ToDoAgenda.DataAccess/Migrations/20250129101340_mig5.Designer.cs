// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoAgenda.DataAccess.Concrete.EntityFrameworkCore;

#nullable disable

namespace ToDoAgenda.DataAccess.Migrations
{
    [DbContext(typeof(ToDoAgendaContext))]
    [Migration("20250129101340_mig5")]
    partial class mig5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TODoAgenda.Entities.Concrete.DefinedTask", b =>
                {
                    b.Property<int>("DefinedTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DefinedTaskId"));

                    b.Property<string>("DefinedTaskName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DefinedTaskId");

                    b.ToTable("DefinedTasks");
                });

            modelBuilder.Entity("TODoAgenda.Entities.Concrete.ImportanceLevel", b =>
                {
                    b.Property<int>("ImportanceLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ImportanceLevelId"));

                    b.Property<int>("ImportanceLevelDegree")
                        .HasColumnType("integer");

                    b.HasKey("ImportanceLevelId");

                    b.ToTable("ImportanceLevels");
                });

            modelBuilder.Entity("TODoAgenda.Entities.Concrete.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ResultId"));

                    b.Property<int>("FalseCount")
                        .HasColumnType("integer");

                    b.Property<string>("ResultType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TotalNetCount")
                        .HasColumnType("double precision");

                    b.Property<int>("TrueCount")
                        .HasColumnType("integer");

                    b.HasKey("ResultId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("TODoAgenda.Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SettingId"));

                    b.HasKey("SettingId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("TODoAgenda.Entities.Concrete.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TaskId"));

                    b.Property<int>("ImportanceLevelId")
                        .HasColumnType("integer");

                    b.Property<int>("ResultId")
                        .HasColumnType("integer");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TimerId")
                        .HasColumnType("integer");

                    b.HasKey("TaskId");

                    b.HasIndex("ImportanceLevelId");

                    b.HasIndex("ResultId");

                    b.HasIndex("TimerId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TODoAgenda.Entities.Concrete.Timer", b =>
                {
                    b.Property<int>("TimerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TimerId"));

                    b.Property<TimeSpan>("CompleteTime")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("targetTime")
                        .HasColumnType("interval");

                    b.HasKey("TimerId");

                    b.ToTable("Timers");
                });

            modelBuilder.Entity("TODoAgenda.Entities.Concrete.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TODoAgenda.Entities.Concrete.Task", b =>
                {
                    b.HasOne("TODoAgenda.Entities.Concrete.ImportanceLevel", "ImportanceLevel")
                        .WithMany()
                        .HasForeignKey("ImportanceLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TODoAgenda.Entities.Concrete.Result", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TODoAgenda.Entities.Concrete.Timer", "Timer")
                        .WithMany()
                        .HasForeignKey("TimerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportanceLevel");

                    b.Navigation("Result");

                    b.Navigation("Timer");
                });
#pragma warning restore 612, 618
        }
    }
}
